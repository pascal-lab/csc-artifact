Array.newInstance;byte[];sun.text.bidi.BidiBase.getMemory;1130;;
Array.newInstance;java.lang.String[];java.util.AbstractCollection.toArray;176;;
Array.newInstance;java.lang.String[];java.util.Arrays.copyOf;2245;;
Array.newInstance;sun.font.PhysicalFont[];java.util.AbstractCollection.toArray;176;;
Array.newInstance;sun.security.jca.ProviderConfig[];java.util.Arrays.copyOf;2245;;
Class.forName;java.awt.font.TextAttribute;sun.text.bidi.BidiBase$TextAttributeConstants.getClass;3471;;
Class.forName;java.awt.image.AffineTransformOp;sun.awt.image.ImagingLib.<clinit>;123;;
Class.forName;java.awt.image.ConvolveOp;sun.awt.image.ImagingLib.<clinit>;129;;
Class.forName;java.awt.image.LookupOp;sun.awt.image.ImagingLib.<clinit>;117;;
Class.forName;java.net.Inet6AddressImpl;java.net.InetAddress.loadImpl;1520;;
Class.forName;java.nio.DirectByteBufferR;sun.nio.ch.Util$4.run;414;;
Class.forName;java.security.MessageDigestSpi;java.security.Security.getSpiClass;676;;
Class.forName;java.util.logging.LoggingProxyImpl;sun.util.logging.LoggingSupport$1.run;54;;
Class.forName;org.apache.batik.apps.rasterizer.Main;org.dacapo.harness.Batik.<init>;29;;
Class.forName;org.apache.batik.css.parser.Parser;org.apache.batik.dom.ExtensibleDOMImplementation.createCSSEngine;172;;
Class.forName;org.apache.batik.ext.awt.image.codec.png.PNGTranscoderInternalCodecWriteAdapter;org.apache.batik.transcoder.image.PNGTranscoder.getWriteAdapter;65;;
Class.forName;org.apache.crimson.parser.Parser2;org.apache.crimson.parser.Parser2$Catalog.class$;3306;;
Class.forName;org.dacapo.harness.Batik;org.dacapo.harness.TestHarness.findClass;281;;
Class.forName;sun.awt.X11FontManager;sun.font.FontManagerFactory$1.run;82;;
Class.forName;sun.awt.X11GraphicsEnvironment;java.awt.GraphicsEnvironment.createGE;102;;
Class.forName;sun.dc.DuctusRenderingEngine;sun.java2d.pipe.RenderingEngine$1.run;128;;
Class.forName;sun.font.T2KFontScaler;sun.font.FontScaler.<clinit>;100;;
Class.forName;sun.net.www.protocol.jar.Handler;java.net.URL.getURLStreamHandler;1191;;
Class.forName;sun.nio.fs.LinuxFileSystemProvider;sun.nio.fs.DefaultFileSystemProvider$1.run;47;;
Class.forName;sun.security.provider.NativePRNG;java.security.Provider$Service.getImplClass;1279;;
Class.forName;sun.security.provider.SHA;java.security.Provider$Service.getImplClass;1279;;
Class.forName;sun.util.logging.PlatformLogger$DefaultLoggerProxy;sun.util.logging.PlatformLogger.<clinit>;177;;
Class.forName;sun.util.logging.PlatformLogger$JavaLoggerProxy;sun.util.logging.PlatformLogger.<clinit>;180;;
Class.getDeclaredField;<java.net.Inet6Address: java.net.Inet6Address$Inet6AddressHolder holder6>;java.net.Inet6Address.<clinit>;571;isAccessible=false;
Class.getDeclaredField;<java.net.InetAddress: java.net.InetAddress$InetAddressHolder holder>;java.net.InetAddress.<clinit>;1559;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.CopyOnWriteArrayList: java.util.concurrent.locks.ReentrantLock lock>;java.util.concurrent.CopyOnWriteArrayList.<clinit>;1334;isAccessible=false;
Class.getDeclaredField;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;sun.util.logging.LoggingSupport$1.run;55;isAccessible=false;
Class.getField;<java.awt.font.TextAttribute: java.awt.font.TextAttribute BIDI_EMBEDDING>;sun.text.bidi.BidiBase$TextAttributeConstants.getStaticField;3479;isAccessible=false;
Class.getField;<java.awt.font.TextAttribute: java.awt.font.TextAttribute NUMERIC_SHAPING>;sun.text.bidi.BidiBase$TextAttributeConstants.getStaticField;3479;isAccessible=false;
Class.getField;<java.awt.font.TextAttribute: java.awt.font.TextAttribute RUN_DIRECTION>;sun.text.bidi.BidiBase$TextAttributeConstants.getStaticField;3479;isAccessible=false;
Class.getField;<java.awt.font.TextAttribute: java.lang.Boolean RUN_DIRECTION_LTR>;sun.text.bidi.BidiBase$TextAttributeConstants.getStaticField;3479;isAccessible=false;
Class.getMethod;<Harness: void main(java.lang.String[])>;sun.launcher.LauncherHelper.getMainMethod;494;isAccessible=false;
Class.getMethod;<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>;java.lang.Class.getEnumConstantsShared;;isAccessible=false;
Class.getMethod;<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>;java.lang.Class.getEnumConstantsShared;;isAccessible=false;
Class.getMethod;<org.apache.batik.apps.rasterizer.Main: void execute()>;org.dacapo.harness.Batik.<init>;30;isAccessible=false;
Class.getMethod;<sun.font.EAttribute: sun.font.EAttribute[] values()>;java.lang.Class.getEnumConstantsShared;;isAccessible=false;
Class.newInstance;java.net.Inet6AddressImpl;java.net.InetAddress.loadImpl;1520;;
Class.newInstance;org.apache.batik.css.parser.Parser;org.apache.batik.dom.ExtensibleDOMImplementation.createCSSEngine;172;;
Class.newInstance;org.apache.batik.ext.awt.image.codec.jpeg.JPEGRegistryEntry;org.apache.batik.util.Service.providers;123;;
Class.newInstance;org.apache.batik.ext.awt.image.codec.png.PNGRegistryEntry;org.apache.batik.util.Service.providers;123;;
Class.newInstance;org.apache.batik.ext.awt.image.codec.png.PNGTranscoderInternalCodecWriteAdapter;org.apache.batik.transcoder.image.PNGTranscoder.getWriteAdapter;66;;
Class.newInstance;org.apache.batik.ext.awt.image.codec.tiff.TIFFRegistryEntry;org.apache.batik.util.Service.providers;123;;
Class.newInstance;org.apache.batik.extension.svg.BatikBridgeExtension;org.apache.batik.util.Service.providers;123;;
Class.newInstance;org.apache.batik.extension.svg.BatikDomExtension;org.apache.batik.util.Service.providers;123;;
Class.newInstance;org.apache.batik.script.rhino.RhinoInterpreterFactory;org.apache.batik.util.Service.providers;123;;
Class.newInstance;org.apache.crimson.jaxp.SAXParserFactoryImpl;javax.xml.parsers.FactoryFinder.newInstance;;;
Class.newInstance;sun.awt.resources.awt;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.awt.X11FontManager;sun.font.FontManagerFactory$1.run;83;;
Class.newInstance;sun.awt.X11GraphicsEnvironment;java.awt.GraphicsEnvironment.createGE;109;;
Class.newInstance;sun.dc.DuctusRenderingEngine;sun.java2d.pipe.RenderingEngine$1.run;129;;
Class.newInstance;sun.net.www.protocol.jar.Handler;java.net.URL.getURLStreamHandler;1199;;
Class.newInstance;sun.nio.fs.LinuxFileSystemProvider;sun.nio.fs.DefaultFileSystemProvider$1.run;52;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor1;sun.reflect.MethodAccessorGenerator$1.run;399;;
Class.newInstance;sun.security.provider.Sun;sun.security.jca.ProviderConfig$2.run;221;;
Class.newInstance;sun.text.resources.FormatData_en_AU;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.text.resources.FormatData_en;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.text.resources.FormatData_en_US;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.text.resources.FormatData;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.util.logging.resources.logging;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.util.resources.CurrencyNames_en_AU;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.util.resources.CurrencyNames_en_US;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.util.resources.CurrencyNames;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.util.resources.TimeZoneNames_en;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.util.resources.TimeZoneNames;java.util.ResourceBundle$Control.newBundle;2572;;
Constructor.getModifiers;<java.net.Inet6AddressImpl: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<java.nio.DirectByteBufferR: void <init>(int,long,java.io.FileDescriptor,java.lang.Runnable)>;sun.reflect.NativeConstructorAccessorImpl.newInstance;48;isAccessible=true;
Constructor.getModifiers;<org.apache.batik.css.parser.Parser: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.batik.ext.awt.image.codec.jpeg.JPEGRegistryEntry: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.batik.ext.awt.image.codec.png.PNGRegistryEntry: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.batik.ext.awt.image.codec.png.PNGTranscoderInternalCodecWriteAdapter: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.batik.ext.awt.image.codec.tiff.TIFFRegistryEntry: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.batik.extension.svg.BatikBridgeExtension: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.batik.extension.svg.BatikDomExtension: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.batik.script.rhino.RhinoInterpreterFactory: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.crimson.jaxp.SAXParserFactoryImpl: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.awt.resources.awt: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.awt.X11FontManager: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.awt.X11GraphicsEnvironment: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.dc.DuctusRenderingEngine: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.net.www.protocol.jar.Handler: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.fs.LinuxFileSystemProvider: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.reflect.GeneratedConstructorAccessor1: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.security.provider.Sun: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.FormatData_en_AU: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.FormatData_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.FormatData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.logging.resources.logging: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.CurrencyNames_en_AU: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.CurrencyNames_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.CurrencyNames: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.TimeZoneNames_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.TimeZoneNames: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<java.net.Inet6AddressImpl: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<java.nio.DirectByteBufferR: void <init>(int,long,java.io.FileDescriptor,java.lang.Runnable)>;sun.nio.ch.Util.newMappedByteBufferR;443;isAccessible=true;
Constructor.newInstance;<org.apache.batik.apps.rasterizer.Main: void <init>(java.lang.String[])>;org.dacapo.harness.Batik.iterate;62;isAccessible=false;
Constructor.newInstance;<org.apache.batik.css.parser.Parser: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.batik.ext.awt.image.codec.jpeg.JPEGRegistryEntry: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.batik.ext.awt.image.codec.png.PNGRegistryEntry: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.batik.ext.awt.image.codec.png.PNGTranscoderInternalCodecWriteAdapter: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.batik.ext.awt.image.codec.tiff.TIFFRegistryEntry: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.batik.extension.svg.BatikBridgeExtension: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.batik.extension.svg.BatikDomExtension: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.batik.script.rhino.RhinoInterpreterFactory: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.crimson.jaxp.SAXParserFactoryImpl: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.dacapo.harness.Batik: void <init>(org.dacapo.parser.Config,java.io.File)>;org.dacapo.harness.TestHarness.runBenchmark;211;isAccessible=false;
Constructor.newInstance;<sun.awt.resources.awt: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.awt.X11FontManager: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.awt.X11GraphicsEnvironment: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.dc.DuctusRenderingEngine: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.font.T2KFontScaler: void <init>(sun.font.Font2D,int,boolean,int)>;sun.font.FontScaler.getScaler;128;isAccessible=false;
Constructor.newInstance;<sun.net.www.protocol.jar.Handler: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.fs.LinuxFileSystemProvider: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor1: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.security.provider.NativePRNG: void <init>()>;java.security.Provider$Service.newInstance;1240;isAccessible=false;
Constructor.newInstance;<sun.security.provider.SHA: void <init>()>;java.security.Provider$Service.newInstance;1240;isAccessible=false;
Constructor.newInstance;<sun.security.provider.Sun: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData_en_AU: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.logging.resources.logging: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames_en_AU: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.TimeZoneNames_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.TimeZoneNames: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Field.getDeclaringClass;<java.awt.font.TextAttribute: java.awt.font.TextAttribute BIDI_EMBEDDING>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;43;isAccessible=false;
Field.getDeclaringClass;<java.awt.font.TextAttribute: java.awt.font.TextAttribute NUMERIC_SHAPING>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;43;isAccessible=false;
Field.getDeclaringClass;<java.awt.font.TextAttribute: java.awt.font.TextAttribute RUN_DIRECTION>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;43;isAccessible=false;
Field.getDeclaringClass;<java.awt.font.TextAttribute: java.lang.Boolean RUN_DIRECTION_LTR>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;43;isAccessible=false;
Field.getDeclaringClass;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;43;isAccessible=true;
Field.get*;<java.awt.font.TextAttribute: java.awt.font.TextAttribute BIDI_EMBEDDING>;sun.text.bidi.BidiBase$TextAttributeConstants.getStaticField;3480;isAccessible=false;
Field.get*;<java.awt.font.TextAttribute: java.awt.font.TextAttribute NUMERIC_SHAPING>;sun.text.bidi.BidiBase$TextAttributeConstants.getStaticField;3480;isAccessible=false;
Field.get*;<java.awt.font.TextAttribute: java.awt.font.TextAttribute RUN_DIRECTION>;sun.text.bidi.BidiBase$TextAttributeConstants.getStaticField;3480;isAccessible=false;
Field.get*;<java.awt.font.TextAttribute: java.lang.Boolean RUN_DIRECTION_LTR>;sun.text.bidi.BidiBase$TextAttributeConstants.getStaticField;3480;isAccessible=false;
Field.get*;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;sun.util.logging.LoggingSupport$1.run;57;isAccessible=true;
Field.getModifiers;<java.awt.font.TextAttribute: java.awt.font.TextAttribute BIDI_EMBEDDING>;sun.misc.Unsafe.fieldOffset;597;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.awt.font.TextAttribute BIDI_EMBEDDING>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;34;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.awt.font.TextAttribute BIDI_EMBEDDING>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;35;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.awt.font.TextAttribute BIDI_EMBEDDING>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;36;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.awt.font.TextAttribute BIDI_EMBEDDING>;sun.reflect.UnsafeFieldAccessorImpl.<init>;49;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.awt.font.TextAttribute NUMERIC_SHAPING>;sun.misc.Unsafe.fieldOffset;597;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.awt.font.TextAttribute NUMERIC_SHAPING>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;34;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.awt.font.TextAttribute NUMERIC_SHAPING>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;35;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.awt.font.TextAttribute NUMERIC_SHAPING>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;36;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.awt.font.TextAttribute NUMERIC_SHAPING>;sun.reflect.UnsafeFieldAccessorImpl.<init>;49;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.awt.font.TextAttribute RUN_DIRECTION>;sun.misc.Unsafe.fieldOffset;597;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.awt.font.TextAttribute RUN_DIRECTION>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;34;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.awt.font.TextAttribute RUN_DIRECTION>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;35;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.awt.font.TextAttribute RUN_DIRECTION>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;36;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.awt.font.TextAttribute RUN_DIRECTION>;sun.reflect.UnsafeFieldAccessorImpl.<init>;49;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.lang.Boolean RUN_DIRECTION_LTR>;sun.misc.Unsafe.fieldOffset;597;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.lang.Boolean RUN_DIRECTION_LTR>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;34;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.lang.Boolean RUN_DIRECTION_LTR>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;35;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.lang.Boolean RUN_DIRECTION_LTR>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;36;isAccessible=false;
Field.getModifiers;<java.awt.font.TextAttribute: java.lang.Boolean RUN_DIRECTION_LTR>;sun.reflect.UnsafeFieldAccessorImpl.<init>;49;isAccessible=false;
Field.getModifiers;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;sun.misc.Unsafe.fieldOffset;597;isAccessible=true;
Field.getModifiers;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;34;isAccessible=true;
Field.getModifiers;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;35;isAccessible=true;
Field.getModifiers;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;36;isAccessible=true;
Field.getModifiers;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;sun.reflect.UnsafeFieldAccessorImpl.<init>;49;isAccessible=true;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute BACKGROUND>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute BIDI_EMBEDDING>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute CHAR_REPLACEMENT>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute FAMILY>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute FONT>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute FOREGROUND>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute INPUT_METHOD_HIGHLIGHT>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute INPUT_METHOD_UNDERLINE>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute JUSTIFICATION>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute NUMERIC_SHAPING>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute POSTURE>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute RUN_DIRECTION>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute SIZE>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute STRIKETHROUGH>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute SUPERSCRIPT>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute SWAP_COLORS>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute TRANSFORM>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute UNDERLINE>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute WEIGHT>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.awt.font.TextAttribute WIDTH>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Boolean RUN_DIRECTION_LTR>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Boolean RUN_DIRECTION_RTL>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Boolean STRIKETHROUGH_ON>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Boolean SWAP_COLORS_ON>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float JUSTIFICATION_FULL>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float JUSTIFICATION_NONE>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float POSTURE_OBLIQUE>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float POSTURE_REGULAR>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float WEIGHT_BOLD>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float WEIGHT_DEMIBOLD>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float WEIGHT_DEMILIGHT>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float WEIGHT_EXTRABOLD>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float WEIGHT_EXTRA_LIGHT>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float WEIGHT_HEAVY>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float WEIGHT_LIGHT>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float WEIGHT_MEDIUM>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float WEIGHT_REGULAR>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float WEIGHT_SEMIBOLD>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float WEIGHT_ULTRABOLD>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float WIDTH_CONDENSED>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float WIDTH_EXTENDED>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float WIDTH_REGULAR>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float WIDTH_SEMI_CONDENSED>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Float WIDTH_SEMI_EXTENDED>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Integer SUPERSCRIPT_SUB>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Integer SUPERSCRIPT_SUPER>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Integer UNDERLINE_LOW_DASHED>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Integer UNDERLINE_LOW_DOTTED>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Integer UNDERLINE_LOW_GRAY>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Integer UNDERLINE_LOW_ONE_PIXEL>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Integer UNDERLINE_LOW_TWO_PIXEL>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.awt.font.TextAttribute: java.lang.Integer UNDERLINE_ON>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.net.Inet6Address: int cached_scope_id>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.net.Inet6Address: int INADDRSZ>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.net.Inet6Address: java.net.Inet6Address$Inet6AddressHolder holder6>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.net.InetAddress: boolean preferIPv6Address>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.net.InetAddress: int IPv4>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.net.InetAddress: int IPv6>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.net.InetAddress: java.net.InetAddress$InetAddressHolder holder>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.CopyOnWriteArrayList: java.util.concurrent.locks.ReentrantLock lock>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.CopyOnWriteArrayList: long serialVersionUID>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;java.lang.Class.searchFields;;isAccessible=false;
Method.getModifiers;<Harness: void main(java.lang.String[])>;sun.launcher.LauncherHelper.getMainMethod;503;isAccessible=false;
Method.getName;<Harness: void main(java.lang.String[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission valueOf(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption valueOf(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.batik.apps.rasterizer.Main: boolean proceedOnSourceTranscodingFailure(org.apache.batik.apps.rasterizer.SVGConverterSource,java.io.File,java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.batik.apps.rasterizer.Main: boolean proceedWithComputedTask(org.apache.batik.transcoder.Transcoder,java.util.Map,java.util.List,java.util.List)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.batik.apps.rasterizer.Main: boolean proceedWithSourceTranscoding(org.apache.batik.apps.rasterizer.SVGConverterSource,java.io.File)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.batik.apps.rasterizer.Main: void execute()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.batik.apps.rasterizer.Main: void main(java.lang.String[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.batik.apps.rasterizer.Main: void onSourceTranscodingSuccess(org.apache.batik.apps.rasterizer.SVGConverterSource,java.io.File)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.batik.apps.rasterizer.Main: void validateConverterConfig(org.apache.batik.apps.rasterizer.SVGConverter)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<sun.font.EAttribute: java.lang.String toString()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<sun.font.EAttribute: sun.font.EAttribute forAttribute(java.text.AttributedCharacterIterator$Attribute)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<sun.font.EAttribute: sun.font.EAttribute valueOf(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<sun.font.EAttribute: sun.font.EAttribute[] values()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.invoke;<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>;java.lang.Class.getEnumConstantsShared;;isAccessible=true;
Method.invoke;<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>;java.lang.Class.getEnumConstantsShared;;isAccessible=true;
Method.invoke;<org.apache.batik.apps.rasterizer.Main: void execute()>;org.dacapo.harness.Batik.iterate;63;isAccessible=false;
Method.invoke;<sun.font.EAttribute: sun.font.EAttribute[] values()>;java.lang.Class.getEnumConstantsShared;;isAccessible=true;
