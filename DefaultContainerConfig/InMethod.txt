Map-Value <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <javax.print.attribute.standard.PrinterStateReasons: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.Collections$UnmodifiableMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.Collections$CheckedMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.TreeMap$NavigableSubMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <sun.awt.FontConfiguration$PropertiesHandler$FontProperties: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)> 1
Map-Value <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <sun.awt.AWTAutoShutdown$PeerMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <sun.font.AttributeMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.awt.RenderingHints: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <sun.util.PreHashedMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.lang.ProcessEnvironment$StringEnvironment: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <sun.misc.SoftCache: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)> 1
Map-Value <java.util.concurrent.ConcurrentSkipListMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.concurrent.ConcurrentSkipListMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)> 2
Map-Value <java.util.concurrent.ConcurrentSkipListMap: java.lang.Object replace(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.concurrent.ConcurrentHashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)> 2
Map-Value <java.util.concurrent.ConcurrentHashMap: java.lang.Object replace(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.Collections$SingletonMap: void <init>(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)> 1
Map-Value <java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)> 2
Map-Value <java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object replace(java.lang.Object,java.lang.Object)> 1
Map-Key <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <javax.print.attribute.standard.PrinterStateReasons: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.Collections$UnmodifiableMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.Collections$CheckedMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.TreeMap$NavigableSubMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <sun.awt.FontConfiguration$PropertiesHandler$FontProperties: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)> 0
Map-Key <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <sun.awt.AWTAutoShutdown$PeerMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <sun.font.AttributeMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.awt.RenderingHints: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <sun.util.PreHashedMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.lang.ProcessEnvironment$StringEnvironment: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <sun.misc.SoftCache: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)> 0
Map-Key <java.util.concurrent.ConcurrentSkipListMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.concurrent.ConcurrentSkipListMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.Collections$SingletonMap: void <init>(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object put(java.lang.Object,java.lang.Object)> 0
Map-Key <java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)> 0

Col-Value <java.util.ArrayList: boolean add(java.lang.Object)> 0
Col-Value <java.util.concurrent.DelayQueue: boolean add(java.util.concurrent.Delayed)> 0
Col-Value <java.util.concurrent.DelayQueue: boolean add(java.lang.Object)> 0
Col-Value <java.util.concurrent.DelayQueue: boolean offer(java.util.concurrent.Delayed)> 0
Col-Value <java.util.concurrent.DelayQueue: boolean offer(java.lang.Object)> 0
Col-Value <java.util.concurrent.DelayQueue: void put(java.util.concurrent.Delayed)> 0
Col-Value <java.util.concurrent.DelayQueue: void put(java.lang.Object)> 0
Col-Value <java.util.concurrent.DelayQueue: boolean offer(java.util.concurrent.Delayed,long,java.util.concurrent.TimeUnit)> 0
Col-Value <java.util.concurrent.DelayQueue: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)> 0
Col-Value <java.util.LinkedList: boolean add(java.lang.Object)> 0
Col-Value <java.util.HashSet: boolean add(java.lang.Object)> 0
Col-Value <java.util.AbstractQueue: boolean add(java.lang.Object)> 0
Col-Value <java.util.TreeSet: boolean add(java.lang.Object)> 0
Col-Value <java.util.PriorityQueue: boolean add(java.lang.Object)> 0
Col-Value <java.util.PriorityQueue: boolean offer(java.lang.Object)> 0
Col-Value <java.util.ArrayList: java.lang.Object set(int,java.lang.Object)> 1
Col-Value <java.util.ArrayList: void add(int,java.lang.Object)> 1
Col-Value <java.util.LinkedList: void push(java.lang.Object)> 0
Col-Value <java.util.LinkedList: boolean offerLast(java.lang.Object)> 0
Col-Value <java.util.LinkedList: boolean offerFirst(java.lang.Object)> 0
Col-Value <java.util.LinkedList: boolean offer(java.lang.Object)> 0
Col-Value <java.util.LinkedList: void addFirst(java.lang.Object)> 0
Col-Value <java.util.LinkedList: void addLast(java.lang.Object)> 0
Col-Value <java.util.LinkedList: java.lang.Object set(int,java.lang.Object)> 1
Col-Value <java.util.LinkedList: void add(int,java.lang.Object)> 1
Col-Value <java.util.Arrays$ArrayList: java.lang.Object set(int,java.lang.Object)> 1
Col-Value <java.util.Vector: boolean add(java.lang.Object)> 0
Col-Value <java.util.Vector: void setElementAt(java.lang.Object,int)> 0
Col-Value <java.util.Vector: void insertElementAt(java.lang.Object,int)> 0
Col-Value <java.util.Vector: void addElement(java.lang.Object)> 0
Col-Value <java.util.Vector: java.lang.Object set(int,java.lang.Object)> 1
Col-Value <java.util.Vector: void add(int,java.lang.Object)> 1
Col-Value <java.util.ArrayDeque: boolean add(java.lang.Object)> 0
Col-Value <java.util.ArrayDeque: boolean offer(java.lang.Object)> 0
Col-Value <java.util.ArrayDeque: void addFirst(java.lang.Object)> 0
Col-Value <java.util.ArrayDeque: void addLast(java.lang.Object)> 0
Col-Value <java.util.ArrayDeque: boolean offerFirst(java.lang.Object)> 0
Col-Value <java.util.ArrayDeque: boolean offerLast(java.lang.Object)> 0
Col-Value <java.util.ArrayDeque: void push(java.lang.Object)> 0
Col-Value <java.util.Stack: java.lang.Object push(java.lang.Object)> 0
Col-Value <java.util.Collections$UnmodifiableCollection: boolean add(java.lang.Object)> 0
Col-Value <java.util.Collections$CheckedCollection: boolean add(java.lang.Object)> 0
Col-Value <java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)> 0
Col-Value <java.util.Collections$CheckedList: java.lang.Object set(int,java.lang.Object)> 1
Col-Value <java.util.Collections$CheckedList: void add(int,java.lang.Object)> 1
Col-Value <java.util.Collections$SynchronizedList: java.lang.Object set(int,java.lang.Object)> 1
Col-Value <java.util.Collections$SynchronizedList: void add(int,java.lang.Object)> 1
Col-Value <java.util.Collections$UnmodifiableList: java.lang.Object set(int,java.lang.Object)> 1
Col-Value <java.util.Collections$UnmodifiableList: void add(int,java.lang.Object)> 1
Col-Value <java.util.concurrent.SynchronousQueue: void put(java.lang.Object)> 0
Col-Value <java.util.concurrent.SynchronousQueue: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)> 0
Col-Value <java.util.concurrent.SynchronousQueue: boolean offer(java.lang.Object)> 0
Col-Value <java.util.SubList: java.lang.Object set(int,java.lang.Object)> 1
Col-Value <java.util.SubList: void add(int,java.lang.Object)> 1
Col-Value <java.util.Collections$CopiesList: void <init>(int,java.lang.Object)> 1
Col-Value <sun.awt.util.IdentityArrayList: void add(int,java.lang.Object)> 1
Col-Value <sun.awt.util.IdentityArrayList: boolean add(java.lang.Object)> 0
Col-Value <sun.awt.util.IdentityArrayList: java.lang.Object set(int,java.lang.Object)> 1
Col-Value <sun.net.www.http.ClientVector: void put(sun.net.www.http.HttpClient)> 0
Col-Value <sun.security.jca.ProviderList$ServiceList: void addService(java.security.Provider$Service)> 0
Col-Value <java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: boolean add(java.lang.Runnable)> 0
Col-Value <java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: boolean offer(java.lang.Runnable)> 0
Col-Value <java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: void put(java.lang.Runnable)> 0
Col-Value <java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: boolean offer(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> 0
Col-Value <java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: void put(java.lang.Object)> 0
Col-Value <javax.security.auth.Subject$ClassSet: boolean add(java.lang.Object)> 0
Col-Value <javax.security.auth.Subject$SecureSet: boolean add(java.lang.Object)> 0
Col-Value <javax.imageio.spi.PartiallyOrderedSet: boolean add(java.lang.Object)> 0
Col-Value <java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)> 0
Col-Value <java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)> 0
Col-Value <java.util.concurrent.ArrayBlockingQueue: boolean add(java.lang.Object)> 0
Col-Value <java.util.concurrent.ArrayBlockingQueue: boolean offer(java.lang.Object)> 0
Col-Value <java.util.concurrent.ArrayBlockingQueue: void put(java.lang.Object)> 0
Col-Value <java.util.concurrent.ArrayBlockingQueue: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)> 0
Col-Value <java.util.concurrent.LinkedBlockingQueue: void put(java.lang.Object)> 0
Col-Value <java.util.concurrent.LinkedBlockingQueue: boolean offer(java.lang.Object)> 0
Col-Value <java.util.concurrent.LinkedBlockingQueue: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)> 0
Col-Value <java.util.concurrent.PriorityBlockingQueue: boolean add(java.lang.Object)> 0
Col-Value <java.util.concurrent.PriorityBlockingQueue: boolean offer(java.lang.Object)> 0
Col-Value <java.util.concurrent.PriorityBlockingQueue: void put(java.lang.Object)> 0
Col-Value <java.util.concurrent.PriorityBlockingQueue: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)> 0
Col-Value <java.util.concurrent.LinkedBlockingDeque: void addFirst(java.lang.Object)> 0
Col-Value <java.util.concurrent.LinkedBlockingDeque: void addLast(java.lang.Object)> 0
Col-Value <java.util.concurrent.LinkedBlockingDeque: boolean offerFirst(java.lang.Object)> 0
Col-Value <java.util.concurrent.LinkedBlockingDeque: boolean offerLast(java.lang.Object)> 0
Col-Value <java.util.concurrent.LinkedBlockingDeque: void putFirst(java.lang.Object)> 0
Col-Value <java.util.concurrent.LinkedBlockingDeque: void putLast(java.lang.Object)> 0
Col-Value <java.util.concurrent.LinkedBlockingDeque: boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit)> 0
Col-Value <java.util.concurrent.LinkedBlockingDeque: boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit)> 0
Col-Value <java.util.concurrent.LinkedBlockingDeque: boolean add(java.lang.Object)> 0
Col-Value <java.util.concurrent.LinkedBlockingDeque: boolean offer(java.lang.Object)> 0
Col-Value <java.util.concurrent.LinkedBlockingDeque: void put(java.lang.Object)> 0
Col-Value <java.util.concurrent.LinkedBlockingDeque: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)> 0
Col-Value <java.util.concurrent.LinkedBlockingDeque: void push(java.lang.Object)> 0
Col-Value <java.util.concurrent.ConcurrentSkipListSet: boolean add(java.lang.Object)> 0
Col-Value <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)> 0
Col-Value <java.util.concurrent.CopyOnWriteArrayList: void add(int,java.lang.Object)> 1
Col-Value <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)> 1
Col-Value <java.util.concurrent.CopyOnWriteArrayList: boolean addIfAbsent(java.lang.Object)> 0
Col-Value <java.util.concurrent.CopyOnWriteArraySet: boolean add(java.lang.Object)> 0
Col-Value <java.util.Collections$SingletonList: void <init>(java.lang.Object)> 0
Col-Value <java.util.Collections$SingletonSet: void <init>(java.lang.Object)> 0
Col-Value <java.util.concurrent.CopyOnWriteArrayList$COWSubList: void set(int,java.lang.Object)> 1
Col-Value <java.util.concurrent.CopyOnWriteArrayList$COWSubList: void add(int,java.lang.Object)> 1
