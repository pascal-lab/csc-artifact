Points-to sets of all variables
[]:<ImpreciseLambdas: void lambda$main$0(java.lang.String)>/r0 -> [[]:ConstantObj{java.lang.String: "xxx"}]
[]:<ImpreciseLambdas: void lambda$main$1(java.lang.Integer)>/r0 -> []
[]:<ImpreciseLambdas: void main(java.lang.String[])>/$r1 -> [[]:LambdaObj{alloc=<ImpreciseLambdas: void main(java.lang.String[])>[2@L7] $r1 = invokedynamic <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)> "accept" <MethodType: java.util.function.Consumer ()>[MethodType: void (java.lang.Object),MethodHandle[REF_invokeStatic]: <ImpreciseLambdas: void lambda$main$0(java.lang.String)>,MethodType: void (java.lang.String)](),type=java.util.function.Consumer in <ImpreciseLambdas: void main(java.lang.String[])>}]
[]:<ImpreciseLambdas: void main(java.lang.String[])>/$r2 -> [[]:LambdaObj{alloc=<ImpreciseLambdas: void main(java.lang.String[])>[5@L9] $r2 = invokedynamic <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)> "accept" <MethodType: java.util.function.Consumer ()>[MethodType: void (java.lang.Object),MethodHandle[REF_invokeStatic]: <ImpreciseLambdas: void lambda$main$1(java.lang.Integer)>,MethodType: void (java.lang.Integer)](),type=java.util.function.Consumer in <ImpreciseLambdas: void main(java.lang.String[])>}]
[]:<ImpreciseLambdas: void main(java.lang.String[])>/$r3 -> [[]:LambdaObj{alloc=<ImpreciseLambdas: void main(java.lang.String[])>[2@L7] $r1 = invokedynamic <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)> "accept" <MethodType: java.util.function.Consumer ()>[MethodType: void (java.lang.Object),MethodHandle[REF_invokeStatic]: <ImpreciseLambdas: void lambda$main$0(java.lang.String)>,MethodType: void (java.lang.String)](),type=java.util.function.Consumer in <ImpreciseLambdas: void main(java.lang.String[])>}, []:LambdaObj{alloc=<ImpreciseLambdas: void main(java.lang.String[])>[5@L9] $r2 = invokedynamic <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)> "accept" <MethodType: java.util.function.Consumer ()>[MethodType: void (java.lang.Object),MethodHandle[REF_invokeStatic]: <ImpreciseLambdas: void lambda$main$1(java.lang.Integer)>,MethodType: void (java.lang.Integer)](),type=java.util.function.Consumer in <ImpreciseLambdas: void main(java.lang.String[])>}]
[]:<ImpreciseLambdas: void main(java.lang.String[])>/$r4 -> [[]:LambdaObj{alloc=<ImpreciseLambdas: void main(java.lang.String[])>[2@L7] $r1 = invokedynamic <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)> "accept" <MethodType: java.util.function.Consumer ()>[MethodType: void (java.lang.Object),MethodHandle[REF_invokeStatic]: <ImpreciseLambdas: void lambda$main$0(java.lang.String)>,MethodType: void (java.lang.String)](),type=java.util.function.Consumer in <ImpreciseLambdas: void main(java.lang.String[])>}, []:LambdaObj{alloc=<ImpreciseLambdas: void main(java.lang.String[])>[5@L9] $r2 = invokedynamic <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)> "accept" <MethodType: java.util.function.Consumer ()>[MethodType: void (java.lang.Object),MethodHandle[REF_invokeStatic]: <ImpreciseLambdas: void lambda$main$1(java.lang.Integer)>,MethodType: void (java.lang.Integer)](),type=java.util.function.Consumer in <ImpreciseLambdas: void main(java.lang.String[])>}]
[]:<ImpreciseLambdas: void main(java.lang.String[])>/%stringconst3 -> [[]:ConstantObj{java.lang.String: "xxx"}]
[]:<ImpreciseLambdas: void main(java.lang.String[])>/r0 -> [[]:NewObj{<ImpreciseLambdas: void main(java.lang.String[])>[1@L5] newarray java.lang.Object[%intconst0]}]
[]:<ImpreciseLambdas: void main(java.lang.String[])>/r5 -> [[]:EntryPointObj{alloc=<main-arguments>,type=java.lang.String[] in <ImpreciseLambdas: void main(java.lang.String[])>}]
[]:<ImpreciseLambdas: void print(java.lang.String)>/r0 -> [[]:ConstantObj{java.lang.String: "xxx"}]
[]:<ImpreciseLambdas: void useInt(java.lang.Integer)>/r0 -> []
[]:<java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/dynamicMethodType -> [[]:ConstantObj{java.lang.invoke.MethodType: MethodType: void (java.lang.Integer)}, []:ConstantObj{java.lang.invoke.MethodType: MethodType: void (java.lang.String)}]
[]:<java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/factoryType -> [[]:ConstantObj{java.lang.invoke.MethodType: MethodType: java.util.function.Consumer ()}]
[]:<java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/implementation -> [[]:ConstantObj{java.lang.invoke.MethodHandle: MethodHandle[REF_invokeStatic]: <ImpreciseLambdas: void lambda$main$0(java.lang.String)>}, []:ConstantObj{java.lang.invoke.MethodHandle: MethodHandle[REF_invokeStatic]: <ImpreciseLambdas: void lambda$main$1(java.lang.Integer)>}]
[]:<java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/interfaceMethodName -> [[]:ConstantObj{java.lang.String: "accept"}]
[]:<java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/interfaceMethodType -> [[]:ConstantObj{java.lang.invoke.MethodType: MethodType: void (java.lang.Object)}]
[]:<java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/r1 -> [[]:MethodHandlesLookupObj{alloc=ImpreciseLambdas,type=java.lang.invoke.MethodHandles$Lookup}]

Points-to sets of all static fields

Points-to sets of all instance fields

Points-to sets of all array indexes
[]:EntryPointObj{alloc=<main-arguments>,type=java.lang.String[] in <ImpreciseLambdas: void main(java.lang.String[])>}[*] -> [[]:EntryPointObj{alloc=<main-arguments-element>,type=java.lang.String in <ImpreciseLambdas: void main(java.lang.String[])>}]
[]:NewObj{<ImpreciseLambdas: void main(java.lang.String[])>[1@L5] newarray java.lang.Object[%intconst0]}[*] -> [[]:LambdaObj{alloc=<ImpreciseLambdas: void main(java.lang.String[])>[2@L7] $r1 = invokedynamic <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)> "accept" <MethodType: java.util.function.Consumer ()>[MethodType: void (java.lang.Object),MethodHandle[REF_invokeStatic]: <ImpreciseLambdas: void lambda$main$0(java.lang.String)>,MethodType: void (java.lang.String)](),type=java.util.function.Consumer in <ImpreciseLambdas: void main(java.lang.String[])>}, []:LambdaObj{alloc=<ImpreciseLambdas: void main(java.lang.String[])>[5@L9] $r2 = invokedynamic <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)> "accept" <MethodType: java.util.function.Consumer ()>[MethodType: void (java.lang.Object),MethodHandle[REF_invokeStatic]: <ImpreciseLambdas: void lambda$main$1(java.lang.Integer)>,MethodType: void (java.lang.Integer)](),type=java.util.function.Consumer in <ImpreciseLambdas: void main(java.lang.String[])>}]

